
Goal:
	1.	Turn each Industry card on the Solutions page into a clickable block with a background image placeholder (we’ll upload the actual images later).
	2.	On desktop viewports, “Learn More” (and clicking the card itself) should smoothly scroll to an on‐page detail panel for that industry (e.g. #industry-mining).
	3.	On mobile viewports (or touch devices), “Learn More” should link to a dedicated sub‐page at /industries/:slug (e.g. /industries/mining).
	4.	Build out the detail panels (or pages) so they contain:
	•	Industry name
	•	Key Pain Point
	•	VTIS Solution Pillar
	•	Products Used
	•	A “Contact Us” button at the bottom
	5.	Eliminate the runtime‐error‐plugin overlay by wrapping any DOM lookups in null checks before accessing .nodeType and setting server.hmr.overlay = false in vite.config.js.

Implementation Details:
	1.	HTML structure for each card:

<a 
  href="#industry-<slug>" 
  class="industry-card" 
  data-slug="<slug>" 
  style="background-image: url('/placeholder.jpg');" 
  onclick="return handleIndustryClick(event)"
>
  <h3 class="industry-card__title">Mining Operations</h3>
  <button class="industry-card__cta">Learn More</button>
</a>

	•	Replace <slug> with the lowercase, hyphenated industry name.
	•	Use a CSS rule like .industry-card { background-size: cover; background-position: center; }.

	2.	JavaScript click handler (handleIndustryClick):

function handleIndustryClick(event) {
  const card = event.currentTarget;
  const slug = card.dataset.slug;
  // defensive null-check to avoid runtime-error-plugin
  if (!card || !card.nodeType) return true;

  const isMobile = /Mobi|Android/i.test(navigator.userAgent);
  if (isMobile) {
    // deep-link on mobile
    window.location.href = `/industries/${slug}`;
  } else {
    // smooth scroll on desktop
    const target = document.getElementById(`industry-${slug}`);
    if (target && target.scrollIntoView) {
      target.scrollIntoView({ behavior: 'smooth' });
    }
  }
  // prevent default only on desktop to allow mobile link
  return isMobile;
}


	3.	On-page detail panels:

<section id="industry-mining" class="industry-detail">
  <h2>Mining Operations</h2>
  <p><strong>Pain Point:</strong> Hard-rock abrasion & uptime</p>
  <p><strong>Solution Pillar:</strong> High-Capacity Crushing</p>
  <p><strong>Products:</strong> Single-Toggle Jaw, Double-Toggle Jaw</p>
  <a href="/contact" class="btn btn-secondary">Contact Us</a>
</section>

	•	Repeat for each industry, matching the slugs and data from our table.

	4.	Remove the Vite HMR overlay error plugin:
	•	In vite.config.js, set:

export default {
  server: {
    hmr: {
      overlay: false
    }
  }
};


	•	Anywhere you reference t.nodeType, guard it with:

if (!t || typeof t.nodeType !== 'number') {
  // bail out or return early
}


	5.	CSS & Responsiveness:
	•	Use Flex or Grid to make cards wrap nicely.
	•	At mobile breakpoints, ensure the industry-card is full‐width and the CTA is tappable.
	•	Add a smooth-scroll polyfill if you need to support older browsers.

Result:
	•	Industry cards become full‐block, image‐backed CTAs.
	•	Desktop scrolls in-page, mobile goes to sub-pages.
	•	On-page panels show the exact details and keep the generic Contact Us fallback.
	•	Runtime errors from HMR overlay are gone, and all DOM lookups are null‐safe.
