We have a change in plans. We will skip the "Case Studies" section for now. Instead, we will build a new, high-value "Knowledge Center" to share expert tips and technical articles. This will be a cornerstone of our SEO and brand authority strategy.
Your task is to create the complete framework for this new section.
Step 1: Create the Data Model for Articles
Since we are not using a Headless CMS yet, you must first create a new data source for our articles.
 * Action: Create a new file at /data/articles.ts.
 * Data Structure: This file will export an array of Article objects. Each object must follow this interface:
export interface Article {
  slug: string;
  title: string;
  author: string;
  publishDate: string; // e.g., "June 10, 2025"
  summary: string; // A short, one-sentence summary for the article card.
  image: string; // A placeholder image path, e.g., "/images/articles/crusher-maintenance.jpg"
  content: string; // The full article content, can be simple text or Markdown.
}

Step 2: Create a Sample Article
To build the pages, we need at least one piece of content.
 * Action: In your new /data/articles.ts file, add one sample article object to the array. Use the following content:
export const articles: Article[] = [
  {
    slug: "5-tips-to-maximize-jaw-crusher-throughput",
    title: "5 Tips to Maximize Jaw Crusher Throughput",
    author: "VTIS Industrial Experts, Ahmedabad",
    publishDate: "June 10, 2025",
    summary: "Learn how proper feeding, maintenance, and operational adjustments can significantly increase the output and efficiency of your primary crushing circuit.",
    image: "/images/articles/jaw-crusher-throughput.jpg",
    content: `
      <h2>1. Ensure Consistent and Regulated Feeding</h2>
      <p>Surge loading and trickling feed can both harm efficiency. Use a vibrating grizzly feeder to provide a steady, controlled flow of material into the crusher...</p>
      <h2>2. Optimize the Closed Side Setting (CSS)</h2>
      <p>The CSS is the most critical factor in determining product size and throughput. Adjusting it properly for your desired output is key...</p>
      // Add placeholder text for tips 3, 4, and 5.
    `
  }
];

Step 3: Build the Knowledge Center Pages
Now, create the frontend pages to display these articles.
 * Action 1: Create the Main Gallery Page (/knowledge-center)
   * This page will be our blog-style index.
   * It should fetch all articles from /data/articles.ts and display them in a grid of "Article Cards."
   * Each card should show the article's image, title, summary, and a "Read More" button that links to the full article page.
 * Action 2: Create the Dynamic Article Detail Page (/knowledge-center/[slug])
   * This template will display the full content of a single article.
   * It will use the slug from the URL to find the correct article in the data file.
   * The page must cleanly display the article's title, author, publishDate, and the full content.
Step 4: Update Site Navigation
To ensure visitors can find this new section, you must add it to the main site navigation.
 * Action: Add a link to the "Knowledge Center" (/knowledge-center) in the website's main <header> and <footer>.
Your Deliverable:
Please confirm when this new section is live. I will verify the following:
 * The main /knowledge-center page is created and displays the sample article card.
 * The link on the card works, and the full article is readable on its own page.
 * The "Knowledge Center" link is present in the main header and footer navigation.