We’ve identified a critical runtime error on our product pages (“Rendered more hooks than during the previous render”) caused by our inline FAQ implementation violating the Rules of Hooks. Please refactor by creating a reusable component and swapping out the old FAQ loop—no more conditional or inline hooks.

1. Create src/components/faq-item.tsx

import React from 'react';

interface FaqItemProps {
  question: string;
  answer: string;
}

export default function FaqItem({ question, answer }: FaqItemProps) {
  return (
    <details className="group rounded-lg bg-slate-50 p-6 border border-slate-200 [&_summary::-webkit-details-marker]:hidden">
      <summary className="flex cursor-pointer items-center justify-between gap-1.5 text-slate-900">
        <h3 className="text-lg font-bold">{question}</h3>
        <span className="relative h-5 w-5 shrink-0 transition-transform duration-300 group-open:rotate-45">
          <svg xmlns="http://www.w3.org/2000/svg" className="absolute inset-0 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth="2">
            <path strokeLinecap="round" strokeLinejoin="round" d="M12 9v3m0 0v3m0-3h3m-3 0H9" />
          </svg>
        </span>
      </summary>
      <div className="mt-4 leading-relaxed text-slate-700" dangerouslySetInnerHTML={{ __html: answer }} />
    </details>
  );
}

2. Update app/products/[slug]/page.tsx
	•	Add import at the top:

import FaqItem from '@/components/faq-item';


	•	Replace the old <details> FAQ block with:

<section className="my-16 max-w-4xl mx-auto">
  <header className="text-center mb-12">
    <h2 className="text-4xl font-bold text-slate-900">Your Questions, Answered</h2>
    <p className="mt-4 text-lg text-slate-600">
      Key considerations for plant managers and quarry owners when investing in our equipment.
    </p>
  </header>
  <div className="space-y-4">
    {product.faqs?.map((faq, idx) => (
      <FaqItem key={idx} question={faq.question} answer={faq.answer} />
    ))}
  </div>
  <script
    type="application/ld+json"
    dangerouslySetInnerHTML={{
      __html: JSON.stringify({
        "@context": "https://schema.org",
        "@type": "FAQPage",
        mainEntity: product.faqs?.map(faq => ({
          "@type": "Question",
          name: faq.question,
          acceptedAnswer: {
            "@type": "Answer",
            text: faq.answer.replace(/<[^>]+>/g, '')
          }
        })) ?? []
      })
    }}
  />
</section>



This will enforce one hook-per-item, in a stable order, and eliminate the runtime error.